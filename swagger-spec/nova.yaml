swagger: '2.0'
info:
  version: 1.0.1
  title: Api
host: host
basePath: /
paths:
  /v2.1/servers/{server_id}/action:
    post:
      tags:
      - servers-action-evacuate
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: server-evacuate-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-evacuate-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/servers/{server_id}/metadata:
    get:
      tags:
      - metadata
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    post:
      tags:
      - metadata
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: server-metadata-all-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-metadata-all-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
    put:
      tags:
      - metadata
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: server-metadata-all-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-metadata-all-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/servers/{server_id}/metadata/{key}:
    get:
      tags:
      - metadata
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: key
        description: "The metadata item key, as a string. Maximum length is 255 characters.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - metadata
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: key
        description: "The metadata item key, as a string. Maximum length is 255 characters.\n"
        in: path
        required: true
        type: string
      - name: server-metadata-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-metadata-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
    delete:
      tags:
      - metadata
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: key
        description: "The metadata item key, as a string. Maximum length is 255 characters.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/flavors/{flavor_id}/os-flavor-access:
    get:
      tags:
      - os-flavor-access
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/flavors/{flavor_id}/action:
    post:
      tags:
      - os-flavor-access
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor-access-add-tenant-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/flavor-access-add-tenant-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-security-group-rules:
    post:
      tags:
      - os-security-group-rules
      parameters:
      - name: security-group-rules-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/security-group-rules-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-security-group-rules/{security_group_rule_id}:
    delete:
      tags:
      - os-security-group-rules
      parameters:
      - name: security_group_rule_id
        description: "The ID of the security group rule.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-keypairs:
    get:
      tags:
      - os-keypairs
      parameters:
      - name: user_id
        description: "This allows administrative users to operate key-pairs of specified\n\
          user ID.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the\nlast-seen item from the response as the ``marker``\
          \ parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The last-seen item. Use the ``limit`` parameter to make an initial\
          \ limited\nrequest and use the last-seen item from the response as the ``marker``\n\
          parameter value in a subsequent limited request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-keypairs
      parameters:
      - name: keypairs-import-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/keypairs-import-post-req'
      responses:
        '201':
          description: "Resource was created and is ready to use.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-keypairs/{keypair_name}:
    get:
      tags:
      - os-keypairs
      parameters:
      - name: keypair_name
        description: "The keypair name.\n"
        in: path
        required: true
        type: string
      - name: user_id
        description: "This allows administrative users to operate key-pairs of specified\n\
          user ID.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-keypairs
      parameters:
      - name: keypair_name
        description: "The keypair name.\n"
        in: path
        required: true
        type: string
      - name: user_id
        description: "This allows administrative users to operate key-pairs of specified\n\
          user ID.\n"
        in: query
        required: false
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-volumes:
    get:
      tags:
      - os-volumes
      parameters:
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-volumes
      parameters:
      - name: os-volumes-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/os-volumes-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-volumes/detail:
    get:
      tags:
      - os-volumes
      parameters:
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-volumes/{volume_id}:
    get:
      tags:
      - os-volumes
      parameters:
      - name: volume_id
        description: "The unique ID for a volume.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-volumes
      parameters:
      - name: volume_id
        description: "The unique ID for a volume.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-snapshots:
    get:
      tags:
      - os-volumes
      parameters:
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-volumes
      parameters:
      - name: snapshot-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/snapshot-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-snapshots/detail:
    get:
      tags:
      - os-volumes
      parameters:
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-snapshots/{snapshot_id}:
    get:
      tags:
      - os-volumes
      parameters:
      - name: snapshot_id
        description: "The UUID of the snapshot.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-volumes
      parameters:
      - name: snapshot_id
        description: "The UUID of the snapshot.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-floating-ips:
    get:
      tags:
      - os-floating-ips
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-floating-ips
      parameters:
      - name: floating-ips-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/floating-ips-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-floating-ips/{floating_ip_id}:
    get:
      tags:
      - os-floating-ips
      parameters:
      - name: floating_ip_id
        description: "The ID of the floating IP address.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-floating-ips
      parameters:
      - name: floating_ip_id
        description: "The ID of the floating IP address.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/consoles:
    get:
      tags:
      - os-consoles
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
    post:
      tags:
      - os-consoles
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/servers/{server_id}/consoles/{console_id}:
    get:
      tags:
      - os-consoles
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: console_id
        description: "The UUID of the console.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
    delete:
      tags:
      - os-consoles
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: console_id
        description: "The UUID of the console.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-certificates:
    post:
      tags:
      - os-certificates
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-certificates/root:
    get:
      tags:
      - os-certificates
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/servers/{server_id}/topology:
    get:
      tags:
      - server-topology
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-baremetal-nodes:
    get:
      tags:
      - os-baremetal-nodes
      parameters: []
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-baremetal-nodes/{node_id}:
    get:
      tags:
      - os-baremetal-nodes
      parameters:
      - name: node_id
        description: "The node ID.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/servers:
    get:
      tags:
      - servers
      parameters:
      - name: access_ip_v4
        description: "Filter server list result by IPv4 address that should be used\n\
          to access the server.\n"
        in: query
        required: false
        type: string
      - name: access_ip_v6
        description: "Filter server list result by IPv6 address that should be used\n\
          to access the server.\n"
        in: query
        required: false
        type: string
      - name: all_tenants
        description: "Specify the ``all_tenants`` query parameter to list all instances\n\
          for all projects. By default this is only allowed by administrators.\nIf\
          \ this parameter is specified without a value, the value defaults to\n``True``.\
          \ If the value is specified, ``1``, ``t``, ``true``,\n``on``, ``y`` and\
          \ ``yes`` are treated as ``True``. ``0``, ``f``,\n``false``, ``off``, ``n``\
          \ and ``no`` are treated as ``False``.\n(They are case-insensitive.)\n"
        in: query
        required: false
        type: boolean
      - name: auto_disk_config
        description: "Filter the server list result by the ``disk_config`` setting\
          \ of the server,\nValid values are:\n\n- ``AUTO``\n- ``MANUAL``\n\nThis\
          \ parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: availability_zone
        description: "Filter the server list result by server availability zone.\n\
          \nThis parameter is restricted to administrators until microversion 2.83.\n\
          If non-admin users specify this parameter on a microversion less than 2.83,\n\
          it will be ignored.\n"
        in: query
        required: false
        type: string
      - name: changes-since
        description: "Filters the response by a date and time stamp when the server\
          \ last\nchanged status. To help keep track of changes this may also return\n\
          recently deleted servers.\n\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-since``\
          \ must be earlier than or equal to\nthe value of the ``changes-before``\
          \ otherwise API will return 400.\n"
        in: query
        required: false
        type: string
      - name: config_drive
        description: "Filter the server list result by the config drive setting of\
          \ the server.\n\nThis parameter is restricted to administrators until microversion\
          \ 2.83.\nIf non-admin users specify this parameter on a microversion less\
          \ than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: created_at
        description: "Filter the server list result by a date and time stamp when\
          \ server was created.\n\nThe date and time stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\
          ::\n\n   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: deleted
        description: "Show deleted items only. In some circumstances deleted items\
          \ will still\nbe accessible via the backend database, however there is no\n\
          contract on how long, so this parameter should be used with\ncaution. ``1``,\
          \ ``t``, ``true``, ``on``, ``y`` and ``yes`` are treated as\n``True`` (case-insensitive).\
          \ Other than them are treated as ``False``.\n\nThis parameter is only valid\
          \ when specified by administrators.\nIf non-admin users specify this parameter,\
          \ it is ignored.\n"
        in: query
        required: false
        type: boolean
      - name: description
        description: "Filter the server list result by description.\n\nThis parameter\
          \ is only valid when specified by administrators.\nIf non-admin users specify\
          \ this parameter, it is ignored.\n\n.. note::\n\n   ``display_description``\
          \ can also be requested which is alias of\n   ``description`` but that is\
          \ not recommended to use as that will\n   be removed in future.\n"
        in: query
        required: false
        type: string
      - name: flavor
        description: "Filters the response by a flavor, as a UUID. A flavor is a combination\
          \ of memory,\ndisk size, and CPUs.\n"
        in: query
        required: false
        type: string
      - name: host
        description: "Filter the server list result by the host name of compute node.\n\
          \nThis parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: hostname
        description: "Filter the server list result by the host name of server.\n\n\
          This parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: image
        description: "Filters the response by an image, as a UUID.\n\n.. note::\n\n\
          \   'image_ref' can also be requested which is alias of 'image'\n   but\
          \ that is not recommended to use as that will be removed in future.\n"
        in: query
        required: false
        type: string
      - name: ip
        description: "An IPv4 address to filter results by.\n"
        in: query
        required: false
        type: string
      - name: ip6
        description: "An IPv6 address to filter results by.\n\nUp to microversion\
          \ 2.4, this parameter is only valid when specified\nby administrators. If\
          \ non-admin users specify this parameter,\nit is ignored.\nStarting from\
          \ microversion 2.5, this parameter is valid for no-admin users\nas well\
          \ as administrators.\n"
        in: query
        required: false
        type: string
      - name: kernel_id
        description: "Filter the server list result by the UUID of the kernel image\n\
          when using an AMI.\n\nThis parameter is only valid when specified by administrators.\n\
          If non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: key_name
        description: "Filter the server list result by keypair name.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: launch_index
        description: "Filter the server list result by the sequence in which the\n\
          servers were launched.\n\nThis parameter is only valid when specified by\
          \ administrators.\nIf non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: integer
      - name: launched_at
        description: "Filter the server list result by a date and time stamp when\
          \ the instance was launched.\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\n\nThis parameter is\
          \ restricted to administrators until microversion 2.83.\nIf non-admin users\
          \ specify this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the ID\nof the last-seen item from the response as the\
          \ ``marker`` parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: locked_by
        description: "Filter the server list result by who locked the server, possible\
          \ value\ncould be ``admin`` or ``owner``.\n\nThis parameter is only valid\
          \ when specified by administrators.\nIf non-admin users specify this parameter,\
          \ it is ignored.\n"
        in: query
        required: false
        type: string
      - name: marker
        description: "The ID of the last-seen item. Use the ``limit`` parameter to\
          \ make an initial limited\nrequest and use the ID of the last-seen item\
          \ from the response as the ``marker``\nparameter value in a subsequent limited\
          \ request.\n"
        in: query
        required: false
        type: string
      - name: name
        description: "Filters the response by a server name, as a string.  You can\
          \ use regular expressions\nin the query. For example, the ``?name=bob``\
          \ regular expression returns both bob\nand bobb. If you must match on only\
          \ bob, you can use a regular expression that\nmatches the syntax of the\
          \ underlying database server that is implemented for Compute,\nsuch as MySQL\
          \ or PostgreSQL.\n\n.. note::\n\n   'display_name' can also be requested\
          \ which is alias of 'name'\n   but that is not recommended to use as that\
          \ will be removed in future.\n"
        in: query
        required: false
        type: string
      - name: node
        description: "Filter the server list result by the node.\n\nThis parameter\
          \ is only valid when specified by administrators.\nIf non-admin users specify\
          \ this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: power_state
        description: "Filter the server list result by server power state.\n\nPossible\
          \ values are integer values that is mapped as::\n\n  0: NOSTATE\n  1: RUNNING\n\
          \  3: PAUSED\n  4: SHUTDOWN\n  6: CRASHED\n  7: SUSPENDED\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: integer
      - name: progress
        description: "Filter the server list result by the progress of the server.\n\
          The value could be from 0 to 100 as integer.\n\nThis parameter is restricted\
          \ to administrators until microversion 2.83.\nIf non-admin users specify\
          \ this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: integer
      - name: project_id
        description: "Filter the list of servers by the given project ID.\n\nThis\
          \ filter only works when the ``all_tenants`` filter is also specified.\n\
          \n.. note::\n\n   'tenant_id' can also be requested which is alias of 'project_id'\n\
          \   but that is not recommended to use as that will be removed in future.\n"
        in: query
        required: false
        type: string
      - name: ramdisk_id
        description: "Filter the server list result by the UUID of the ramdisk image\
          \ when\nusing an AMI.\n\nThis parameter is only valid when specified by\
          \ administrators.\nIf non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: reservation_id
        description: "A reservation id as returned by a servers multiple create call.\n"
        in: query
        required: false
        type: string
      - name: root_device_name
        description: "Filter the server list result by the root device name of the\
          \ server.\n\nThis parameter is only valid when specified by administrators.\n\
          If non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: soft_deleted
        description: "Filter the server list by ``SOFT_DELETED`` status. This parameter\
          \ is only valid\nwhen the ``deleted=True`` filter parameter is specified.\n"
        in: query
        required: false
        type: boolean
      - name: sort_dir
        description: "Sort direction. A valid value is ``asc`` (ascending) or ``desc``\
          \ (descending).\nDefault is ``desc``. You can specify multiple pairs of\
          \ sort key and sort direction\nquery parameters. If you omit the sort direction\
          \ in a pair, the API uses the natural\nsorting direction of the server ``sort_key``\
          \ attribute.\n"
        in: query
        required: false
        type: string
      - name: sort_key
        description: "Sorts by a server attribute. Default attribute is ``created_at``.\
          \ You can\nspecify multiple pairs of sort key and sort direction query parameters.\
          \ If\nyou omit the sort direction in a pair, the API uses the natural sorting\n\
          direction of the server ``sort_key`` attribute. The sort keys are limited\n\
          to:\n\n- ``access_ip_v4``\n- ``access_ip_v6``\n- ``auto_disk_config``\n\
          - ``availability_zone``\n- ``config_drive``\n- ``created_at``\n- ``display_description``\n\
          - ``display_name``\n- ``host``\n- ``hostname``\n- ``image_ref``\n- ``instance_type_id``\n\
          - ``kernel_id``\n- ``key_name``\n- ``launch_index``\n- ``launched_at``\n\
          - ``locked`` (New in version 2.73)\n- ``locked_by``\n- ``node``\n- ``power_state``\n\
          - ``progress``\n- ``project_id``\n- ``ramdisk_id``\n- ``root_device_name``\n\
          - ``task_state``\n- ``terminated_at``\n- ``updated_at``\n- ``user_id``\n\
          - ``uuid``\n- ``vm_state``\n\n``host`` and ``node`` are only allowed for\
          \ admin.\nIf non-admin users specify them, a 403 error is returned.\n"
        in: query
        required: false
        type: string
      - name: status
        description: "Filters the response by a server status, as a string. For example,\
          \ ``ACTIVE``.\n\nUp to microversion 2.37, an empty list is returned if an\
          \ invalid status is\nspecified. Starting from microversion 2.38, a 400 error\
          \ is returned\nin that case.\n"
        in: query
        required: false
        type: string
      - name: task_state
        description: "Filter the server list result by task state.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: terminated_at
        description: "Filter the server list result by a date and time stamp when\
          \ instance was terminated.\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\n\nThis parameter is\
          \ restricted to administrators until microversion 2.83.\nIf non-admin users\
          \ specify this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: user_id
        description: "Filter the list of servers by the given user ID.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: uuid
        description: "Filter the server list result by the UUID of the server.\n\n\
          This parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: vm_state
        description: "Filter the server list result by vm state.\n\nThe value could\
          \ be:\n\n- ``ACTIVE``\n- ``BUILDING``\n- ``DELETED``\n- ``ERROR``\n- ``PAUSED``\n\
          - ``RESCUED``\n- ``RESIZED``\n- ``SHELVED``\n- ``SHELVED_OFFLOADED``\n-\
          \ ``SOFT_DELETED``\n- ``STOPPED``\n- ``SUSPENDED``\n\nThis parameter is\
          \ restricted to administrators until microversion 2.83.\nIf non-admin users\
          \ specify this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: not-tags
        description: "A list of tags to filter the server list by. Servers that don't\n\
          match all tags in this list will be returned. Boolean expression in this\n\
          case is 'NOT (t1 AND t2)'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: not-tags-any
        description: "A list of tags to filter the server list by. Servers that don't\n\
          match any tags in this list will be returned. Boolean expression in this\n\
          case is 'NOT (t1 OR t2)'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: tags
        description: "A list of tags to filter the server list by. Servers that match\n\
          all tags in this list will be returned. Boolean expression in this\ncase\
          \ is 't1 AND t2'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: tags-any
        description: "A list of tags to filter the server list by. Servers that match\n\
          any tag in this list will be returned. Boolean expression in this\ncase\
          \ is 't1 OR t2'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: changes-before
        description: "Filters the response by a date and time stamp when the server\
          \ last changed.\nThose servers that changed before or equal to the specified\
          \ date and time stamp\nare returned. To help keep track of changes this\
          \ may also return recently deleted\nservers.\n\nThe date and time stamp\
          \ format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n\
          \   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-before``\
          \ must be later than or equal to\nthe value of the ``changes-since`` otherwise\
          \ API will return 400.\n"
        in: query
        required: false
        type: string
      - name: locked
        description: "Specify the ``locked`` query parameter to list all locked or\
          \ unlocked\ninstances. If the value is specified, ``1``, ``t``, ``true``,\n\
          ``on``, ``y`` and ``yes`` are treated as ``True``. ``0``, ``f``,\n``false``,\
          \ ``off``, ``n`` and ``no`` are treated as ``False``.\n(They are case-insensitive.)\
          \ Any other value provided will be considered\ninvalid.\n"
        in: query
        required: false
        type: boolean
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - servers
      parameters:
      - name: server-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-create-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/servers/detail:
    get:
      tags:
      - servers
      parameters:
      - name: access_ip_v4
        description: "Filter server list result by IPv4 address that should be used\n\
          to access the server.\n"
        in: query
        required: false
        type: string
      - name: access_ip_v6
        description: "Filter server list result by IPv6 address that should be used\n\
          to access the server.\n"
        in: query
        required: false
        type: string
      - name: all_tenants
        description: "Specify the ``all_tenants`` query parameter to list all instances\n\
          for all projects. By default this is only allowed by administrators.\nIf\
          \ this parameter is specified without a value, the value defaults to\n``True``.\
          \ If the value is specified, ``1``, ``t``, ``true``,\n``on``, ``y`` and\
          \ ``yes`` are treated as ``True``. ``0``, ``f``,\n``false``, ``off``, ``n``\
          \ and ``no`` are treated as ``False``.\n(They are case-insensitive.)\n"
        in: query
        required: false
        type: boolean
      - name: auto_disk_config
        description: "Filter the server list result by the ``disk_config`` setting\
          \ of the server,\nValid values are:\n\n- ``AUTO``\n- ``MANUAL``\n\nThis\
          \ parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: availability_zone
        description: "Filter the server list result by server availability zone.\n\
          \nThis parameter is restricted to administrators until microversion 2.83.\n\
          If non-admin users specify this parameter on a microversion less than 2.83,\n\
          it will be ignored.\n"
        in: query
        required: false
        type: string
      - name: changes-since
        description: "Filters the response by a date and time stamp when the server\
          \ last\nchanged status. To help keep track of changes this may also return\n\
          recently deleted servers.\n\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-since``\
          \ must be earlier than or equal to\nthe value of the ``changes-before``\
          \ otherwise API will return 400.\n"
        in: query
        required: false
        type: string
      - name: config_drive
        description: "Filter the server list result by the config drive setting of\
          \ the server.\n\nThis parameter is restricted to administrators until microversion\
          \ 2.83.\nIf non-admin users specify this parameter on a microversion less\
          \ than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: created_at
        description: "Filter the server list result by a date and time stamp when\
          \ server was created.\n\nThe date and time stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\
          ::\n\n   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: deleted
        description: "Show deleted items only. In some circumstances deleted items\
          \ will still\nbe accessible via the backend database, however there is no\n\
          contract on how long, so this parameter should be used with\ncaution. ``1``,\
          \ ``t``, ``true``, ``on``, ``y`` and ``yes`` are treated as\n``True`` (case-insensitive).\
          \ Other than them are treated as ``False``.\n\nThis parameter is only valid\
          \ when specified by administrators.\nIf non-admin users specify this parameter,\
          \ it is ignored.\n"
        in: query
        required: false
        type: boolean
      - name: description
        description: "Filter the server list result by description.\n\nThis parameter\
          \ is only valid when specified by administrators.\nIf non-admin users specify\
          \ this parameter, it is ignored.\n\n.. note::\n\n   ``display_description``\
          \ can also be requested which is alias of\n   ``description`` but that is\
          \ not recommended to use as that will\n   be removed in future.\n"
        in: query
        required: false
        type: string
      - name: flavor
        description: "Filters the response by a flavor, as a UUID. A flavor is a combination\
          \ of memory,\ndisk size, and CPUs.\n"
        in: query
        required: false
        type: string
      - name: host
        description: "Filter the server list result by the host name of compute node.\n\
          \nThis parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: hostname
        description: "Filter the server list result by the host name of server.\n\n\
          This parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: image
        description: "Filters the response by an image, as a UUID.\n\n.. note::\n\n\
          \   'image_ref' can also be requested which is alias of 'image'\n   but\
          \ that is not recommended to use as that will be removed in future.\n"
        in: query
        required: false
        type: string
      - name: ip
        description: "An IPv4 address to filter results by.\n"
        in: query
        required: false
        type: string
      - name: ip6
        description: "An IPv6 address to filter results by.\n\nUp to microversion\
          \ 2.4, this parameter is only valid when specified\nby administrators. If\
          \ non-admin users specify this parameter,\nit is ignored.\nStarting from\
          \ microversion 2.5, this parameter is valid for no-admin users\nas well\
          \ as administrators.\n"
        in: query
        required: false
        type: string
      - name: kernel_id
        description: "Filter the server list result by the UUID of the kernel image\n\
          when using an AMI.\n\nThis parameter is only valid when specified by administrators.\n\
          If non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: key_name
        description: "Filter the server list result by keypair name.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: launch_index
        description: "Filter the server list result by the sequence in which the\n\
          servers were launched.\n\nThis parameter is only valid when specified by\
          \ administrators.\nIf non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: integer
      - name: launched_at
        description: "Filter the server list result by a date and time stamp when\
          \ the instance was launched.\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\n\nThis parameter is\
          \ restricted to administrators until microversion 2.83.\nIf non-admin users\
          \ specify this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the ID\nof the last-seen item from the response as the\
          \ ``marker`` parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: locked_by
        description: "Filter the server list result by who locked the server, possible\
          \ value\ncould be ``admin`` or ``owner``.\n\nThis parameter is only valid\
          \ when specified by administrators.\nIf non-admin users specify this parameter,\
          \ it is ignored.\n"
        in: query
        required: false
        type: string
      - name: marker
        description: "The ID of the last-seen item. Use the ``limit`` parameter to\
          \ make an initial limited\nrequest and use the ID of the last-seen item\
          \ from the response as the ``marker``\nparameter value in a subsequent limited\
          \ request.\n"
        in: query
        required: false
        type: string
      - name: name
        description: "Filters the response by a server name, as a string.  You can\
          \ use regular expressions\nin the query. For example, the ``?name=bob``\
          \ regular expression returns both bob\nand bobb. If you must match on only\
          \ bob, you can use a regular expression that\nmatches the syntax of the\
          \ underlying database server that is implemented for Compute,\nsuch as MySQL\
          \ or PostgreSQL.\n\n.. note::\n\n   'display_name' can also be requested\
          \ which is alias of 'name'\n   but that is not recommended to use as that\
          \ will be removed in future.\n"
        in: query
        required: false
        type: string
      - name: node
        description: "Filter the server list result by the node.\n\nThis parameter\
          \ is only valid when specified by administrators.\nIf non-admin users specify\
          \ this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: power_state
        description: "Filter the server list result by server power state.\n\nPossible\
          \ values are integer values that is mapped as::\n\n  0: NOSTATE\n  1: RUNNING\n\
          \  3: PAUSED\n  4: SHUTDOWN\n  6: CRASHED\n  7: SUSPENDED\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: integer
      - name: progress
        description: "Filter the server list result by the progress of the server.\n\
          The value could be from 0 to 100 as integer.\n\nThis parameter is restricted\
          \ to administrators until microversion 2.83.\nIf non-admin users specify\
          \ this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: integer
      - name: project_id
        description: "Filter the list of servers by the given project ID.\n\nThis\
          \ filter only works when the ``all_tenants`` filter is also specified.\n\
          \n.. note::\n\n   'tenant_id' can also be requested which is alias of 'project_id'\n\
          \   but that is not recommended to use as that will be removed in future.\n"
        in: query
        required: false
        type: string
      - name: ramdisk_id
        description: "Filter the server list result by the UUID of the ramdisk image\
          \ when\nusing an AMI.\n\nThis parameter is only valid when specified by\
          \ administrators.\nIf non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: reservation_id
        description: "A reservation id as returned by a servers multiple create call.\n"
        in: query
        required: false
        type: string
      - name: root_device_name
        description: "Filter the server list result by the root device name of the\
          \ server.\n\nThis parameter is only valid when specified by administrators.\n\
          If non-admin users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: soft_deleted
        description: "Filter the server list by ``SOFT_DELETED`` status. This parameter\
          \ is only valid\nwhen the ``deleted=True`` filter parameter is specified.\n"
        in: query
        required: false
        type: boolean
      - name: sort_dir
        description: "Sort direction. A valid value is ``asc`` (ascending) or ``desc``\
          \ (descending).\nDefault is ``desc``. You can specify multiple pairs of\
          \ sort key and sort direction\nquery parameters. If you omit the sort direction\
          \ in a pair, the API uses the natural\nsorting direction of the server ``sort_key``\
          \ attribute.\n"
        in: query
        required: false
        type: string
      - name: sort_key
        description: "Sorts by a server attribute. Default attribute is ``created_at``.\
          \ You can\nspecify multiple pairs of sort key and sort direction query parameters.\
          \ If\nyou omit the sort direction in a pair, the API uses the natural sorting\n\
          direction of the server ``sort_key`` attribute. The sort keys are limited\n\
          to:\n\n- ``access_ip_v4``\n- ``access_ip_v6``\n- ``auto_disk_config``\n\
          - ``availability_zone``\n- ``config_drive``\n- ``created_at``\n- ``display_description``\n\
          - ``display_name``\n- ``host``\n- ``hostname``\n- ``image_ref``\n- ``instance_type_id``\n\
          - ``kernel_id``\n- ``key_name``\n- ``launch_index``\n- ``launched_at``\n\
          - ``locked`` (New in version 2.73)\n- ``locked_by``\n- ``node``\n- ``power_state``\n\
          - ``progress``\n- ``project_id``\n- ``ramdisk_id``\n- ``root_device_name``\n\
          - ``task_state``\n- ``terminated_at``\n- ``updated_at``\n- ``user_id``\n\
          - ``uuid``\n- ``vm_state``\n\n``host`` and ``node`` are only allowed for\
          \ admin.\nIf non-admin users specify them, a 403 error is returned.\n"
        in: query
        required: false
        type: string
      - name: status
        description: "Filters the response by a server status, as a string. For example,\
          \ ``ACTIVE``.\n\nUp to microversion 2.37, an empty list is returned if an\
          \ invalid status is\nspecified. Starting from microversion 2.38, a 400 error\
          \ is returned\nin that case.\n"
        in: query
        required: false
        type: string
      - name: task_state
        description: "Filter the server list result by task state.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: terminated_at
        description: "Filter the server list result by a date and time stamp when\
          \ instance was terminated.\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\n\nThis parameter is\
          \ restricted to administrators until microversion 2.83.\nIf non-admin users\
          \ specify this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: user_id
        description: "Filter the list of servers by the given user ID.\n\nThis parameter\
          \ is restricted to administrators until microversion 2.83.\nIf non-admin\
          \ users specify this parameter on a microversion less than 2.83,\nit will\
          \ be ignored.\n"
        in: query
        required: false
        type: string
      - name: uuid
        description: "Filter the server list result by the UUID of the server.\n\n\
          This parameter is only valid when specified by administrators.\nIf non-admin\
          \ users specify this parameter, it is ignored.\n"
        in: query
        required: false
        type: string
      - name: vm_state
        description: "Filter the server list result by vm state.\n\nThe value could\
          \ be:\n\n- ``ACTIVE``\n- ``BUILDING``\n- ``DELETED``\n- ``ERROR``\n- ``PAUSED``\n\
          - ``RESCUED``\n- ``RESIZED``\n- ``SHELVED``\n- ``SHELVED_OFFLOADED``\n-\
          \ ``SOFT_DELETED``\n- ``STOPPED``\n- ``SUSPENDED``\n\nThis parameter is\
          \ restricted to administrators until microversion 2.83.\nIf non-admin users\
          \ specify this parameter on a microversion less than 2.83,\nit will be ignored.\n"
        in: query
        required: false
        type: string
      - name: not-tags
        description: "A list of tags to filter the server list by. Servers that don't\n\
          match all tags in this list will be returned. Boolean expression in this\n\
          case is 'NOT (t1 AND t2)'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: not-tags-any
        description: "A list of tags to filter the server list by. Servers that don't\n\
          match any tags in this list will be returned. Boolean expression in this\n\
          case is 'NOT (t1 OR t2)'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: tags
        description: "A list of tags to filter the server list by. Servers that match\n\
          all tags in this list will be returned. Boolean expression in this\ncase\
          \ is 't1 AND t2'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: tags-any
        description: "A list of tags to filter the server list by. Servers that match\n\
          any tag in this list will be returned. Boolean expression in this\ncase\
          \ is 't1 OR t2'. Tags in query must be separated by comma.\n"
        in: query
        required: false
        type: string
      - name: changes-before
        description: "Filters the response by a date and time stamp when the server\
          \ last changed.\nThose servers that changed before or equal to the specified\
          \ date and time stamp\nare returned. To help keep track of changes this\
          \ may also return recently deleted\nservers.\n\nThe date and time stamp\
          \ format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n\
          \   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-before``\
          \ must be later than or equal to\nthe value of the ``changes-since`` otherwise\
          \ API will return 400.\n"
        in: query
        required: false
        type: string
      - name: locked
        description: "Specify the ``locked`` query parameter to list all locked or\
          \ unlocked\ninstances. If the value is specified, ``1``, ``t``, ``true``,\n\
          ``on``, ``y`` and ``yes`` are treated as ``True``. ``0``, ``f``,\n``false``,\
          \ ``off``, ``n`` and ``no`` are treated as ``False``.\n(They are case-insensitive.)\
          \ Any other value provided will be considered\ninvalid.\n"
        in: query
        required: false
        type: boolean
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/servers/{server_id}:
    get:
      tags:
      - servers
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - servers
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: server-update-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-update-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - servers
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/servers/{server_id}/os-virtual-interfaces:
    get:
      tags:
      - os-virtual-interfaces
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-fixed-ips/{fixed_ip}:
    get:
      tags:
      - os-fixed-ips
      parameters:
      - name: fixed_ip
        description: "The fixed IP of interest to you.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-fixed-ips/{fixed_ip}/action:
    post:
      tags:
      - os-fixed-ips
      parameters:
      - name: fixed_ip
        description: "The fixed IP of interest to you.\n"
        in: path
        required: true
        type: string
      - name: fixedip-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/fixedip-post-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-server-groups:
    get:
      tags:
      - os-server-groups
      parameters:
      - name: all_projects
        description: "Administrator only. Lists server groups for all projects. For\
          \ example:\n\n  ``GET /os-server-groups?all_projects=True``\n\nIf you specify\
          \ a tenant ID for a non-administrative user with this query parameter,\n\
          the call lists all server groups for the tenant, or project, rather than\
          \ for\nall projects.\nValue of this query parameter is not checked, only\
          \ presence is considered\nas request for all projects.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-server-groups
      parameters:
      - name: server-groups-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-groups-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-server-groups/{server_group_id}:
    get:
      tags:
      - os-server-groups
      parameters:
      - name: server_group_id
        description: "The UUID of the server group.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-server-groups
      parameters:
      - name: server_group_id
        description: "The UUID of the server group.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/:
    get:
      tags:
      - versions
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
  /v2.1/{api_version}/:
    get:
      tags:
      - versions
      parameters:
      - name: api_version
        description: "The API version as returned in the links from the ``GET /``\
          \ call.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
  /v2.1/os-security-group-default-rules:
    get:
      tags:
      - os-security-group-default-rules
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
    post:
      tags:
      - os-security-group-default-rules
      parameters:
      - name: security-group-default-rules-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/security-group-default-rules-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-security-group-default-rules/{security_group_default_rule_id}:
    get:
      tags:
      - os-security-group-default-rules
      parameters:
      - name: security_group_default_rule_id
        description: "The UUID of the security group rule.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
    delete:
      tags:
      - os-security-group-default-rules
      parameters:
      - name: security_group_default_rule_id
        description: "The UUID of the security group rule.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-migrations:
    get:
      tags:
      - os-migrations
      parameters:
      - name: hidden
        description: "The 'hidden' setting of migration to filter.\nThe 'hidden' flag\
          \ is set if the value is 1.\nThe 'hidden' flag is not set if the value is\
          \ 0.\nBut the 'hidden' setting of migration is always 0,\nso this parameter\
          \ is useless to filter migrations.\n"
        in: query
        required: false
        type: integer
      - name: host
        description: "The source/destination compute node of migration to filter.\n"
        in: query
        required: false
        type: string
      - name: instance_uuid
        description: "The uuid of the instance that migration is operated on to filter.\n"
        in: query
        required: false
        type: string
      - name: migration_type
        description: "The type of migration to filter. Valid values are:\n\n* ``evacuation``\n\
          * ``live-migration``\n* ``migration``\n* ``resize``\n"
        in: query
        required: false
        type: string
      - name: source_compute
        description: "The source compute node of migration to filter.\n"
        in: query
        required: false
        type: string
      - name: status
        description: "The status of migration to filter.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the\nlast-seen item from the response as the ``marker``\
          \ parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The UUID of the last-seen migration. Use the ``limit`` parameter\
          \ to make an\ninitial limited request and use the last-seen item from the\
          \ response as\nthe ``marker`` parameter value in a subsequent limited request.\n"
        in: query
        required: false
        type: string
      - name: changes-since
        description: "Filters the response by a date and time stamp when the migration\
          \ last\nchanged. Those changed after the specified date and time stamp are\
          \ returned.\n\nThe date and time stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\
          ::\n\n   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-since``\
          \ must be earlier than or equal to\nthe value of the ``changes-before``\
          \ otherwise API will return 400.\n"
        in: query
        required: false
        type: string
      - name: changes-before
        description: "Filters the response by a date and time stamp when the migration\
          \ last\nchanged. Those migrations that changed before or equal to the specified\
          \ date and time\nstamp are returned.\n\nThe date and time stamp format is\
          \ `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-before``\
          \ must be later than or equal to\nthe value of the ``changes-since`` otherwise\
          \ API will return 400.\n"
        in: query
        required: false
        type: string
      - name: user_id
        description: "Filter the migrations by the given user ID.\n"
        in: query
        required: false
        type: string
      - name: project_id
        description: "Filter the migrations by the given project ID.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-fping:
    get:
      tags:
      - os-fping
      parameters:
      - name: all_tenants
        description: "Specify the ``all_tenants`` query parameter to ping instances\n\
          for all tenants. By default this is only allowed by admin users.\nValue\
          \ of this query parameter is not checked, only presence\nis considered as\
          \ request for all tenants.\n"
        in: query
        required: false
        type: string
      - name: include
        description: "Specify ``include=uuid[,uuid...]`` to include the instances\
          \ in the results.\n"
        in: query
        required: false
        type: string
      - name: exclude
        description: "Specify ``exclude=uuid[,uuid...]`` to exclude the instances\
          \ from the results.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '503':
          description: "Service is not available. This is mostly caused by service\
            \ configuration\nerrors which prevents the service from successful start\
            \ up.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-fping/{instance_id}:
    get:
      tags:
      - os-fping
      parameters:
      - name: instance_id
        description: "The UUID of the instance.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '503':
          description: "Service is not available. This is mostly caused by service\
            \ configuration\nerrors which prevents the service from successful start\
            \ up.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/servers/{server_id}/os-interface:
    get:
      tags:
      - os-interface
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
    post:
      tags:
      - os-interface
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: attach-interfaces-create-net_id-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/attach-interfaces-create-net_id-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '500':
          description: "Something went wrong inside the service. This should not happen\
            \ usually.\nIf it does happen, it means the server has experienced some\
            \ serious\nproblems.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/servers/{server_id}/os-interface/{port_id}:
    get:
      tags:
      - os-interface
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: port_id
        description: "The UUID of the port.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-interface
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: port_id
        description: "The UUID of the port.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-agents:
    get:
      tags:
      - os-agents
      parameters:
      - name: hypervisor
        description: "Filters the response by a hypervisor type.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
    post:
      tags:
      - os-agents
      parameters:
      - name: agent-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/agent-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-agents/{agent_build_id}:
    put:
      tags:
      - os-agents
      parameters:
      - name: agent_build_id
        description: "The id of the agent build.\n"
        in: path
        required: true
        type: string
      - name: agent-update-put-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/agent-update-put-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
    delete:
      tags:
      - os-agents
      parameters:
      - name: agent_build_id
        description: "The id of the agent build.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-floating-ips-bulk:
    get:
      tags:
      - os-floating-ips-bulk
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
    post:
      tags:
      - os-floating-ips-bulk
      parameters:
      - name: floating-ips-bulk-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/floating-ips-bulk-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-floating-ips-bulk/delete:
    put:
      tags:
      - os-floating-ips-bulk
      parameters:
      - name: floating-ips-bulk-delete-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/floating-ips-bulk-delete-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-floating-ips-bulk/{host_name}:
    get:
      tags:
      - os-floating-ips-bulk
      parameters:
      - name: host_name
        description: "The name of the host.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/flavors/{flavor_id}/os-extra_specs:
    get:
      tags:
      - os-flavor-extra-specs
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    post:
      tags:
      - os-flavor-extra-specs
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor-extra-specs-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/flavor-extra-specs-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/flavors/{flavor_id}/os-extra_specs/{flavor_extra_spec_key}:
    get:
      tags:
      - os-flavor-extra-specs
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor_extra_spec_key
        description: "The extra spec key for the flavor.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - os-flavor-extra-specs
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor_extra_spec_key
        description: "The extra spec key for the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor-extra-specs-update-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/flavor-extra-specs-update-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
    delete:
      tags:
      - os-flavor-extra-specs
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor_extra_spec_key
        description: "The extra spec key for the flavor.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/remote-consoles:
    post:
      tags:
      - servers-remote-consoles
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: create-vnc-console-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/create-vnc-console-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-console-auth-tokens/{console_token}:
    get:
      tags:
      - servers-remote-consoles
      parameters:
      - name: console_token
        description: "Console authentication token.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-simple-tenant-usage:
    get:
      tags:
      - os-simple-tenant-usage
      parameters:
      - name: detailed
        description: "Specify the ``detailed=1`` query parameter to get detail information\n\
          ('server_usages' information).\n"
        in: query
        required: false
        type: integer
      - name: end
        description: "The ending time to calculate usage statistics on compute and\n\
          storage resources. The date and time stamp format is any of\nthe following\
          \ ones:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\n\nFor example, ``2015-08-27T09:49:58``.\n\
          \n::\n\n   CCYY-MM-DDThh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27T09:49:58.123456``.\n\
          \n::\n\n   CCYY-MM-DD hh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27 09:49:58.123456``.\n\
          If you omit this parameter, the current time is used.\n"
        in: query
        required: false
        type: string
      - name: start
        description: "The beginning time to calculate usage statistics on compute\
          \ and\nstorage resources. The date and time stamp format is any of the\n\
          following ones:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\n\nFor example, ``2015-08-27T09:49:58``.\n\
          \n::\n\n   CCYY-MM-DDThh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27T09:49:58.123456``.\n\
          \n::\n\n   CCYY-MM-DD hh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27 09:49:58.123456``.\n\
          If you omit this parameter, the current time is used.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Calculate usage for the limited\
          \ number of\ninstances. Use the ``limit`` parameter to make an initial limited\
          \ request\nand use the last-seen instance UUID from the response as the\
          \ ``marker``\nparameter value in a subsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The last-seen item. Use the ``limit`` parameter to make an initial\
          \ limited\nrequest and use the last-seen instance UUID from the response\
          \ as the\n``marker`` parameter value in a subsequent limited request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-simple-tenant-usage/{tenant_id}:
    get:
      tags:
      - os-simple-tenant-usage
      parameters:
      - name: tenant_id
        description: "The UUID of the tenant in a multi-tenancy cloud.\n"
        in: path
        required: true
        type: string
      - name: end
        description: "The ending time to calculate usage statistics on compute and\n\
          storage resources. The date and time stamp format is any of\nthe following\
          \ ones:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\n\nFor example, ``2015-08-27T09:49:58``.\n\
          \n::\n\n   CCYY-MM-DDThh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27T09:49:58.123456``.\n\
          \n::\n\n   CCYY-MM-DD hh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27 09:49:58.123456``.\n\
          If you omit this parameter, the current time is used.\n"
        in: query
        required: false
        type: string
      - name: start
        description: "The beginning time to calculate usage statistics on compute\
          \ and\nstorage resources. The date and time stamp format is any of the\n\
          following ones:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\n\nFor example, ``2015-08-27T09:49:58``.\n\
          \n::\n\n   CCYY-MM-DDThh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27T09:49:58.123456``.\n\
          \n::\n\n   CCYY-MM-DD hh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27 09:49:58.123456``.\n\
          If you omit this parameter, the current time is used.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Calculate usage for the limited\
          \ number of\ninstances. Use the ``limit`` parameter to make an initial limited\
          \ request\nand use the last-seen instance UUID from the response as the\
          \ ``marker``\nparameter value in a subsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The last-seen item. Use the ``limit`` parameter to make an initial\
          \ limited\nrequest and use the last-seen instance UUID from the response\
          \ as the\n``marker`` parameter value in a subsequent limited request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-hosts:
    get:
      tags:
      - os-hosts
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-hosts/{host_name}:
    get:
      tags:
      - os-hosts
      parameters:
      - name: host_name
        description: "The name of the host.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - os-hosts
      parameters:
      - name: host_name
        description: "The name of the host.\n"
        in: path
        required: true
        type: string
      - name: host-put-maintenance-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/host-put-maintenance-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-hosts/{host_name}/reboot:
    get:
      tags:
      - os-hosts
      parameters:
      - name: host_name
        description: "The name of the host.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-hosts/{host_name}/shutdown:
    get:
      tags:
      - os-hosts
      parameters:
      - name: host_name
        description: "The name of the host.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-hosts/{host_name}/startup:
    get:
      tags:
      - os-hosts
      parameters:
      - name: host_name
        description: "The name of the host.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-tenant-networks:
    get:
      tags:
      - os-tenant-network
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-tenant-network
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '503':
          description: "Service is not available. This is mostly caused by service\
            \ configuration\nerrors which prevents the service from successful start\
            \ up.\n"
  /v2.1/os-tenant-networks/{network_id}:
    get:
      tags:
      - os-tenant-network
      parameters:
      - name: network_id
        description: "The UUID of the network.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-tenant-network
      parameters:
      - name: network_id
        description: "The UUID of the network.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/extensions:
    get:
      tags:
      - extensions
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
  /v2.1/extensions/{alias}:
    get:
      tags:
      - extensions
      parameters:
      - name: alias
        description: "A short name by which this extension is also known.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-floating-ip-pools:
    get:
      tags:
      - os-floating-ip-pools
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/images:
    get:
      tags:
      - images
      parameters:
      - name: changes-since
        description: "Filters the response by a date and time when the image last\
          \ changed status.\nUse this query parameter to check for changes since a\
          \ previous request rather\nthan re-downloading and re-parsing the full status\
          \ at each polling interval.\nIf data has changed, the call returns only\
          \ the items changed since the ``changes-since``\ntime. If data has not changed\
          \ since the ``changes-since`` time, the call returns an\nempty list.\nTo\
          \ enable you to keep track of changes, this filter also displays images\n\
          that were deleted if the ``changes-since`` value specifies a date in the\
          \ last 30 days.\nItems deleted more than 30 days ago might be returned,\
          \ but it is not guaranteed.\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\n"
        in: query
        required: false
        type: string
      - name: server
        description: "Filters the response by a server, as a URL.\n"
        in: query
        required: false
        type: string
      - name: name
        description: "Filters the response by an image name, as a string.\n"
        in: query
        required: false
        type: string
      - name: status
        description: "Filters the response by an image status, as a string. For example,\
          \ ``ACTIVE``.\n"
        in: query
        required: false
        type: string
      - name: minDisk
        description: "Filters the response by a minimum disk space, in GiB. For example,\
          \ ``100``.\n"
        in: query
        required: false
        type: integer
      - name: minRam
        description: "Filters the response by a minimum RAM, in MiB. For example,\
          \ ``512``.\n"
        in: query
        required: false
        type: integer
      - name: type
        description: "Filters the response by an image type. For example, ``snapshot``\
          \ or ``backup``.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the ID\nof the last-seen item from the response as the\
          \ ``marker`` parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The ID of the last-seen item. Use the ``limit`` parameter to\
          \ make an initial limited\nrequest and use the ID of the last-seen item\
          \ from the response as the ``marker``\nparameter value in a subsequent limited\
          \ request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/images/detail:
    get:
      tags:
      - images
      parameters:
      - name: changes-since
        description: "Filters the response by a date and time when the image last\
          \ changed status.\nUse this query parameter to check for changes since a\
          \ previous request rather\nthan re-downloading and re-parsing the full status\
          \ at each polling interval.\nIf data has changed, the call returns only\
          \ the items changed since the ``changes-since``\ntime. If data has not changed\
          \ since the ``changes-since`` time, the call returns an\nempty list.\nTo\
          \ enable you to keep track of changes, this filter also displays images\n\
          that were deleted if the ``changes-since`` value specifies a date in the\
          \ last 30 days.\nItems deleted more than 30 days ago might be returned,\
          \ but it is not guaranteed.\nThe date and time stamp format is `ISO 8601\
          \ <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\n::\n\n   CCYY-MM-DDThh:mm:ss\xB1\
          hh:mm\n\nThe ``\xB1hh:mm`` value, if included, returns the time zone as\
          \ an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\nIf you\
          \ omit the time zone, the UTC time zone is assumed.\n"
        in: query
        required: false
        type: string
      - name: server
        description: "Filters the response by a server, as a URL.\n"
        in: query
        required: false
        type: string
      - name: name
        description: "Filters the response by an image name, as a string.\n"
        in: query
        required: false
        type: string
      - name: status
        description: "Filters the response by an image status, as a string. For example,\
          \ ``ACTIVE``.\n"
        in: query
        required: false
        type: string
      - name: minDisk
        description: "Filters the response by a minimum disk space, in GiB. For example,\
          \ ``100``.\n"
        in: query
        required: false
        type: integer
      - name: minRam
        description: "Filters the response by a minimum RAM, in MiB. For example,\
          \ ``512``.\n"
        in: query
        required: false
        type: integer
      - name: type
        description: "Filters the response by an image type. For example, ``snapshot``\
          \ or ``backup``.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the ID\nof the last-seen item from the response as the\
          \ ``marker`` parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The ID of the last-seen item. Use the ``limit`` parameter to\
          \ make an initial limited\nrequest and use the ID of the last-seen item\
          \ from the response as the ``marker``\nparameter value in a subsequent limited\
          \ request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/images/{image_id}:
    get:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/images/{image_id}/metadata:
    get:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    post:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      - name: image-metadata-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/image-metadata-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      - name: image-metadata-put-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/image-metadata-put-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/images/{image_id}/metadata/{key}:
    get:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      - name: key
        description: "The metadata item key, as a string. Maximum length is 255 characters.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      - name: key
        description: "The metadata item key, as a string. Maximum length is 255 characters.\n"
        in: path
        required: true
        type: string
      - name: image-meta-key-put-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/image-meta-key-put-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - images
      parameters:
      - name: image_id
        description: "The UUID of the image.\n"
        in: path
        required: true
        type: string
      - name: key
        description: "The metadata item key, as a string. Maximum length is 255 characters.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/ips:
    get:
      tags:
      - ips
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/ips/{network_label}:
    get:
      tags:
      - ips
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: network_label
        description: "The network label, such as ``public`` or ``private``.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-cloudpipe:
    get:
      tags:
      - os-cloudpipe
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    post:
      tags:
      - os-cloudpipe
      parameters:
      - name: cloud-pipe-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/cloud-pipe-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-cloudpipe/configure-project:
    put:
      tags:
      - os-cloudpipe
      parameters:
      - name: cloud-pipe-update-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/cloud-pipe-update-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/servers/{server_id}/os-instance-actions:
    get:
      tags:
      - os-instance-actions
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the\nlast-seen item from the response as the ``marker``\
          \ parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The ``request_id`` of the last-seen instance action. Use the\
          \ ``limit``\nparameter to make an initial limited request and use the last-seen\n\
          item from the response as the ``marker`` parameter value in a subsequent\n\
          limited request.\n"
        in: query
        required: false
        type: string
      - name: changes-since
        description: "Filters the response by a date and time stamp when the instance\
          \ action last\nchanged.\n\nThe date and time stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\
          ::\n\n   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-since``\
          \ must be earlier than or equal to\nthe value of the ``changes-before``\
          \ otherwise API will return 400.\n"
        in: query
        required: false
        type: string
      - name: changes-before
        description: "Filters the response by a date and time stamp when the instance\
          \ actions last changed.\nThose instances that changed before or equal to\
          \ the specified date and time stamp\nare returned.\n\nThe date and time\
          \ stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:\n\
          ::\n\n   CCYY-MM-DDThh:mm:ss\xB1hh:mm\n\nThe ``\xB1hh:mm`` value, if included,\
          \ returns the time zone as an offset from UTC.\nFor example, ``2015-08-27T09:49:58-05:00``.\n\
          If you omit the time zone, the UTC time zone is assumed.\nWhen both ``changes-since``\
          \ and ``changes-before`` are specified,\nthe value of the ``changes-before``\
          \ must be later than or equal to\nthe value of the ``changes-since`` otherwise\
          \ API will return 400.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/os-instance-actions/{request_id}:
    get:
      tags:
      - os-instance-actions
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: request_id
        description: "The ID of the request.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/flavors:
    get:
      tags:
      - flavors
      parameters:
      - name: sort_key
        description: "Sorts by a flavor attribute. Default attribute is ``flavorid``.\
          \ You can specify\nmultiple pairs of sort key and sort direction query parameters.\
          \ If you omit the\nsort direction in a pair, the API uses the natural sorting\
          \ direction of the flavor\n``sort_key`` attribute. The sort keys are limited\
          \ to:\n\n- ``created_at``\n- ``description``\n- ``disabled``\n- ``ephemeral_gb``\n\
          - ``flavorid``\n- ``id``\n- ``is_public``\n- ``memory_mb``\n- ``name``\n\
          - ``root_gb``\n- ``rxtx_factor``\n- ``swap``\n- ``updated_at``\n- ``vcpu_weight``\n\
          - ``vcpus``\n"
        in: query
        required: false
        type: string
      - name: sort_dir
        description: "Sort direction. A valid value is ``asc`` (ascending) or ``desc``\
          \ (descending).\nDefault is ``asc``. You can specify multiple pairs of sort\
          \ key and sort direction\nquery parameters. If you omit the sort direction\
          \ in a pair, the API uses the natural\nsorting direction of the flavor ``sort_key``\
          \ attribute.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the ID\nof the last-seen item from the response as the\
          \ ``marker`` parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The ID of the last-seen item. Use the ``limit`` parameter to\
          \ make an initial limited\nrequest and use the ID of the last-seen item\
          \ from the response as the ``marker``\nparameter value in a subsequent limited\
          \ request.\n"
        in: query
        required: false
        type: string
      - name: minDisk
        description: "Filters the response by a minimum disk space, in GiB. For example,\
          \ ``100``.\n"
        in: query
        required: false
        type: integer
      - name: minRam
        description: "Filters the response by a minimum RAM, in MiB. For example,\
          \ ``512``.\n"
        in: query
        required: false
        type: integer
      - name: is_public
        description: "This parameter is only applicable to users with the administrative\
          \ role.\nFor all other non-admin users, the parameter is ignored and only\
          \ public\nflavors will be returned. Filters the flavor list based on whether\
          \ the\nflavor is public or private. If the value of this parameter is not\n\
          specified, it is treated as ``True``. If the value is specified, ``1``,\n\
          ``t``, ``true``, ``on``, ``y`` and ``yes`` are treated as ``True``. ``0``,\n\
          ``f``, ``false``, ``off``, ``n`` and ``no`` are treated as ``False``\n(they\
          \ are case-insensitive). If the value is ``None`` (case-insensitive)\nboth\
          \ public and private flavors will be listed in a single request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - flavors
      parameters:
      - name: flavor-create-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/flavor-create-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/flavors/detail:
    get:
      tags:
      - flavors
      parameters:
      - name: sort_key
        description: "Sorts by a flavor attribute. Default attribute is ``flavorid``.\
          \ You can specify\nmultiple pairs of sort key and sort direction query parameters.\
          \ If you omit the\nsort direction in a pair, the API uses the natural sorting\
          \ direction of the flavor\n``sort_key`` attribute. The sort keys are limited\
          \ to:\n\n- ``created_at``\n- ``description``\n- ``disabled``\n- ``ephemeral_gb``\n\
          - ``flavorid``\n- ``id``\n- ``is_public``\n- ``memory_mb``\n- ``name``\n\
          - ``root_gb``\n- ``rxtx_factor``\n- ``swap``\n- ``updated_at``\n- ``vcpu_weight``\n\
          - ``vcpus``\n"
        in: query
        required: false
        type: string
      - name: sort_dir
        description: "Sort direction. A valid value is ``asc`` (ascending) or ``desc``\
          \ (descending).\nDefault is ``asc``. You can specify multiple pairs of sort\
          \ key and sort direction\nquery parameters. If you omit the sort direction\
          \ in a pair, the API uses the natural\nsorting direction of the flavor ``sort_key``\
          \ attribute.\n"
        in: query
        required: false
        type: string
      - name: limit
        description: "Requests a page size of items. Returns a number of items up\
          \ to a limit value.\nUse the ``limit`` parameter to make an initial limited\
          \ request and use the ID\nof the last-seen item from the response as the\
          \ ``marker`` parameter value in a\nsubsequent limited request.\n"
        in: query
        required: false
        type: integer
      - name: marker
        description: "The ID of the last-seen item. Use the ``limit`` parameter to\
          \ make an initial limited\nrequest and use the ID of the last-seen item\
          \ from the response as the ``marker``\nparameter value in a subsequent limited\
          \ request.\n"
        in: query
        required: false
        type: string
      - name: minDisk
        description: "Filters the response by a minimum disk space, in GiB. For example,\
          \ ``100``.\n"
        in: query
        required: false
        type: integer
      - name: minRam
        description: "Filters the response by a minimum RAM, in MiB. For example,\
          \ ``512``.\n"
        in: query
        required: false
        type: integer
      - name: is_public
        description: "This parameter is only applicable to users with the administrative\
          \ role.\nFor all other non-admin users, the parameter is ignored and only\
          \ public\nflavors will be returned. Filters the flavor list based on whether\
          \ the\nflavor is public or private. If the value of this parameter is not\n\
          specified, it is treated as ``True``. If the value is specified, ``1``,\n\
          ``t``, ``true``, ``on``, ``y`` and ``yes`` are treated as ``True``. ``0``,\n\
          ``f``, ``false``, ``off``, ``n`` and ``no`` are treated as ``False``\n(they\
          \ are case-insensitive). If the value is ``None`` (case-insensitive)\nboth\
          \ public and private flavors will be listed in a single request.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/flavors/{flavor_id}:
    get:
      tags:
      - flavors
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - flavors
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      - name: flavor-update-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/flavor-update-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - flavors
      parameters:
      - name: flavor_id
        description: "The ID of the flavor.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/tags:
    get:
      tags:
      - os-server-tags
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - os-server-tags
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: server-tags-put-all-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/server-tags-put-all-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-server-tags
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/tags/{tag}:
    get:
      tags:
      - os-server-tags
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: tag
        description: "The tag as a string.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - os-server-tags
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: tag
        description: "The tag as a string.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-server-tags
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: tag
        description: "The tag as a string.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/os-server-password:
    get:
      tags:
      - os-server-password
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-server-password
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/os-volume_attachments:
    get:
      tags:
      - os-volume-attachments
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    post:
      tags:
      - os-volume-attachments
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: attach-volume-to-server-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/attach-volume-to-server-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/servers/{server_id}/os-volume_attachments/{volume_id}:
    get:
      tags:
      - os-volume-attachments
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: volume_id
        description: "The UUID of the attached volume.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - os-volume-attachments
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: volume_id
        description: "The UUID of the volume being replaced.\n"
        in: path
        required: true
        type: string
      - name: update-volume-attachment-delete-flag-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/update-volume-attachment-delete-flag-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
    delete:
      tags:
      - os-volume-attachments
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: volume_id
        description: "The UUID of the volume to detach.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-aggregates:
    get:
      tags:
      - os-aggregates
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-aggregates
      parameters:
      - name: aggregate-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/aggregate-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-aggregates/{aggregate_id}:
    get:
      tags:
      - os-aggregates
      parameters:
      - name: aggregate_id
        description: "The aggregate ID.\n"
        in: path
        required: true
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    put:
      tags:
      - os-aggregates
      parameters:
      - name: aggregate_id
        description: "The aggregate ID.\n"
        in: path
        required: true
        type: integer
      - name: aggregate-update-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/aggregate-update-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
    delete:
      tags:
      - os-aggregates
      parameters:
      - name: aggregate_id
        description: "The aggregate ID.\n"
        in: path
        required: true
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-aggregates/{aggregate_id}/action:
    post:
      tags:
      - os-aggregates
      parameters:
      - name: aggregate_id
        description: "The aggregate ID.\n"
        in: path
        required: true
        type: integer
      - name: aggregate-add-host-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/aggregate-add-host-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-aggregates/{aggregate_id}/images:
    post:
      tags:
      - os-aggregates
      parameters:
      - name: aggregate_id
        description: "The aggregate ID.\n"
        in: path
        required: true
        type: integer
      - name: aggregate-images-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/aggregate-images-post-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-cells:
    get:
      tags:
      - os-cells
      parameters:
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
    post:
      tags:
      - os-cells
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-cells/capacities:
    get:
      tags:
      - os-cells
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-cells/detail:
    get:
      tags:
      - os-cells
      parameters:
      - name: limit
        description: "Used in conjunction with ``offset`` to return a slice of items.\
          \ ``limit``\nis the maximum number of items to return. If ``limit`` is not\
          \ specified,\nor exceeds the configurable ``max_limit``, then ``max_limit``\
          \ will be\nused instead.\n"
        in: query
        required: false
        type: integer
      - name: offset
        description: "Used in conjunction with ``limit`` to return a slice of items.\
          \ ``offset``\nis where to start in the list.\n"
        in: query
        required: false
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-cells/info:
    get:
      tags:
      - os-cells
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-cells/{cell_id}:
    get:
      tags:
      - os-cells
      parameters:
      - name: cell_id
        description: "The UUID of the cell.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
    put:
      tags:
      - os-cells
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
    delete:
      tags:
      - os-cells
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-cells/{cell_id}/capacities:
    get:
      tags:
      - os-cells
      parameters:
      - name: cell_id
        description: "The UUID of the cell.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-server-external-events:
    post:
      tags:
      - os-server-external-events
      parameters:
      - name: event-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/event-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
  /v2.1/os-instance_usage_audit_log:
    get:
      tags:
      - os-instance-usage-audit-log
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-instance_usage_audit_log/{before_timestamp}:
    get:
      tags:
      - os-instance-usage-audit-log
      parameters:
      - name: before_timestamp
        description: "Filters the response by the date and time before which to list\
          \ usage\naudits.\nThe date and time stamp format is as follows:\n\n::\n\n\
          \  CCYY-MM-DD hh:mm:ss.NNNNNN\n\nFor example, ``2015-08-27 09:49:58`` or\
          \ ``2015-08-27 09:49:58.123456``.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/servers/{server_id}/migrations:
    get:
      tags:
      - server-migrations
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/servers/{server_id}/migrations/{migration_id}:
    get:
      tags:
      - server-migrations
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: migration_id
        description: "The ID of the server migration.\n"
        in: path
        required: true
        type: integer
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - server-migrations
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: migration_id
        description: "The ID of the server migration.\n"
        in: path
        required: true
        type: integer
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/servers/{server_id}/migrations/{migration_id}/action:
    post:
      tags:
      - server-migrations
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      - name: migration_id
        description: "The ID of the server migration.\n"
        in: path
        required: true
        type: integer
      - name: force_complete
        in: body
        required: true
        schema:
          $ref: '#/definitions/force_complete'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
  /v2.1/os-quota-class-sets/{id}:
    get:
      tags:
      - os-quota-class-sets
      parameters:
      - name: id
        description: "The ID of the quota class.\nNova supports the ``default`` Quota\
          \ Class only.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    put:
      tags:
      - os-quota-class-sets
      parameters:
      - name: id
        description: "The ID of the quota class.\nNova supports the ``default`` Quota\
          \ Class only.\n"
        in: path
        required: true
        type: string
      - name: quota-classes-update-post-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/quota-classes-update-post-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-networks:
    get:
      tags:
      - os-networks
      parameters: []
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
    post:
      tags:
      - os-networks
      parameters:
      - name: network-create-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/network-create-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-networks/add:
    post:
      tags:
      - os-networks
      parameters:
      - name: network-add-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/network-add-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/os-networks/{network_id}:
    get:
      tags:
      - os-networks
      parameters:
      - name: network_id
        description: "The UUID of the network.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
    delete:
      tags:
      - os-networks
      parameters:
      - name: network_id
        description: "The UUID of the network.\n"
        in: path
        required: true
        type: string
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
  /v2.1/os-networks/{network_id}/action:
    post:
      tags:
      - os-networks
      parameters:
      - name: network_id
        description: "The UUID of the network.\n"
        in: path
        required: true
        type: string
      - name: network-associate-host-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/network-associate-host-req'
      responses:
        '202':
          description: "Request was accepted for processing, but the processing has\
            \ not been\ncompleted. A 'location' header is included in the response\
            \ which contains\na link to check the progress of the request.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '410':
          description: "The access request to the target resource is no longer available.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/servers/{server_id}/diagnostics:
    get:
      tags:
      - diagnostics
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
        '409':
          description: "This operation conflicted with another operation on this resource.\n"
        '501':
          description: "The server either does not recognize the request method, or\
            \ it lacks the\nability to fulfill the request.\n"
  /v2.1/servers/{server_id}/os-security-groups:
    get:
      tags:
      - server-security-groups
      parameters:
      - name: server_id
        description: "The UUID of the server.\n"
        in: path
        required: true
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/os-assisted-volume-snapshots:
    post:
      tags:
      - os-assisted-volume-snapshots
      parameters:
      - name: snapshot-create-assisted-req
        in: body
        required: true
        schema:
          $ref: '#/definitions/snapshot-create-assisted-req'
      responses:
        '200':
          description: "Request was successful.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
  /v2.1/os-assisted-volume-snapshots/{snapshot_id}:
    delete:
      tags:
      - os-assisted-volume-snapshots
      parameters:
      - name: snapshot_id
        description: "The UUID of the snapshot.\n"
        in: path
        required: true
        type: string
      - name: delete_info
        description: "Information for snapshot deletion. Include the ID of the associated\
          \ volume. For\nexample:\n\n.. code-block:: javascript\n\n   DELETE /os-assisted-volume-snapshots/421752a6-acf6-4b2d-bc7a-119f9148cd8c?delete_info='{\"\
          volume_id\": \"521752a6-acf6-4b2d-bc7a-119f9148cd8c\"}'\n"
        in: query
        required: true
        type: string
      responses:
        '204':
          description: "The server has fulfilled the request.\n"
        '400':
          description: "Some content in the request was invalid.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
        '404':
          description: "The requested resource could not be found.\n"
  /v2.1/limits:
    get:
      tags:
      - limits
      parameters:
      - name: reserved
        description: "Specify whether the result of resource total includes reserved\
          \ resources\nor not.\n\n  - ``0``: Not include reserved resources.\n  -\
          \ Other than 0: Include reserved resources.\n\nIf non integer value is specified,\
          \ it is the same as ``0``.\n"
        in: query
        required: false
        type: integer
      - name: tenant_id
        description: "Specify the project ID (tenant ID) to show the rate and absolute\
          \ limits.\nThis parameter can be specified by admin only.\n"
        in: query
        required: false
        type: string
      responses:
        '200':
          description: "Request was successful.\n"
        '401':
          description: "User must authenticate before making a request.\n"
        '403':
          description: "Policy does not allow current user to do this operation.\n"
definitions:
  server-evacuate-req:
    type: object
    properties:
      evacuate:
        type: object
        properties:
          host:
            type: string
          adminPass:
            type: string
          onSharedStorage:
            type: string
  server-metadata-all-req:
    type: object
    properties:
      metadata:
        type: object
        properties:
          foo:
            type: string
  server-metadata-req:
    type: object
    properties:
      meta:
        type: object
        properties:
          foo:
            type: string
  flavor-access-add-tenant-req:
    type: object
    properties:
      addTenantAccess:
        type: object
        properties:
          tenant:
            type: string
  security-group-rules-post-req:
    type: object
    properties:
      security_group_rule:
        type: object
        properties:
          parent_group_id:
            type: string
          ip_protocol:
            type: string
          from_port:
            type: integer
          to_port:
            type: integer
          cidr:
            type: string
  keypairs-import-post-req:
    type: object
    properties:
      keypair:
        type: object
        properties:
          name:
            type: string
          type:
            type: string
          public_key:
            type: string
          user_id:
            type: string
  os-volumes-post-req:
    type: object
    properties:
      volume:
        type: object
        properties:
          availability_zone:
            type: string
          display_name:
            type: string
          display_description:
            type: string
          size:
            type: integer
  snapshot-create-req:
    type: object
    properties:
      snapshot:
        type: object
        properties:
          display_name:
            type: string
          display_description:
            type: string
          volume_id:
            type: string
          force:
            type: boolean
  floating-ips-create-req:
    type: object
    properties:
      pool:
        type: string
  server-create-req:
    type: object
    properties:
      server:
        type: object
        properties:
          accessIPv4:
            type: string
          accessIPv6:
            type: string
          name:
            type: string
          imageRef:
            type: string
          flavorRef:
            type: string
          availability_zone:
            type: string
          OS-DCF:diskConfig:
            type: string
          metadata:
            type: object
            properties:
              My Server Name:
                type: string
          personality:
            type: array
            items:
              $ref: '#/definitions/personalit'
          security_groups:
            type: array
            items:
              $ref: '#/definitions/security_group'
          user_data:
            type: string
      OS-SCH-HNT:scheduler_hints:
        type: object
        properties:
          same_host:
            type: string
  personalit:
    type: object
    properties:
      path:
        type: string
      contents:
        type: string
  security_group:
    type: object
    properties:
      name:
        type: string
  server-update-req:
    type: object
    properties:
      server:
        type: object
        properties:
          accessIPv4:
            type: string
          accessIPv6:
            type: string
          OS-DCF:diskConfig:
            type: string
          name:
            type: string
          description:
            type: string
  fixedip-post-req:
    type: object
    properties:
      reserve:
        type: string
        default: 'null'
  server-groups-post-req:
    type: object
    properties:
      server_group:
        type: object
        properties:
          name:
            type: string
          policy:
            type: string
          rules:
            type: object
            properties:
              max_server_per_host:
                type: integer
  security-group-default-rules-create-req:
    type: object
    properties:
      security_group_default_rule:
        type: object
        properties:
          ip_protocol:
            type: string
          from_port:
            type: string
          to_port:
            type: string
          cidr:
            type: string
  attach-interfaces-create-net_id-req:
    type: object
    properties:
      interfaceAttachment:
        type: object
        properties:
          fixed_ips:
            type: array
            items:
              $ref: '#/definitions/fixed_ip'
          net_id:
            type: string
  fixed_ip:
    type: object
    properties:
      ip_address:
        type: string
  agent-post-req:
    type: object
    properties:
      agent:
        type: object
        properties:
          hypervisor:
            type: string
          os:
            type: string
          architecture:
            type: string
          version:
            type: string
          md5hash:
            type: string
          url:
            type: string
  agent-update-put-req:
    type: object
    properties:
      para:
        type: object
        properties:
          url:
            type: string
          md5hash:
            type: string
          version:
            type: string
  floating-ips-bulk-create-req:
    type: object
    properties:
      floating_ips_bulk_create:
        type: object
        properties:
          ip_range:
            type: string
          pool:
            type: string
          interface:
            type: string
  floating-ips-bulk-delete-req:
    type: object
    properties:
      ip_range:
        type: string
  flavor-extra-specs-create-req:
    type: object
    properties:
      extra_specs:
        type: object
        properties:
          hw:cpu_policy:
            type: string
          hw:numa_nodes:
            type: string
  flavor-extra-specs-update-req:
    type: object
    properties:
      hw:numa_nodes:
        type: string
  create-vnc-console-req:
    type: object
    properties:
      remote_console:
        type: object
        properties:
          protocol:
            type: string
          type:
            type: string
  host-put-maintenance-req:
    type: object
    properties:
      status:
        type: string
      maintenance_mode:
        type: string
  image-metadata-post-req:
    type: object
    properties:
      metadata:
        type: object
        properties:
          kernel_id:
            type: string
          Label:
            type: string
  image-metadata-put-req:
    type: object
    properties:
      metadata:
        type: object
        properties:
          auto_disk_config:
            type: string
          Label:
            type: string
  image-meta-key-put-req:
    type: object
    properties:
      meta:
        type: object
        properties:
          auto_disk_config:
            type: string
  cloud-pipe-create-req:
    type: object
    properties:
      cloudpipe:
        type: object
        properties:
          project_id:
            type: string
  cloud-pipe-update-req:
    type: object
    properties:
      configure_project:
        type: object
        properties:
          vpn_ip:
            type: string
          vpn_port:
            type: string
  flavor-create-post-req:
    type: object
    properties:
      flavor:
        type: object
        properties:
          name:
            type: string
          ram:
            type: integer
          vcpus:
            type: integer
          disk:
            type: integer
          id:
            type: string
          rxtx_factor:
            type: float
          description:
            type: string
  flavor-update-req:
    type: object
    properties:
      flavor:
        type: object
        properties:
          description:
            type: string
  server-tags-put-all-req:
    type: object
    properties:
      tags:
        type: array
        items:
          $ref: '#/definitions/tag'
  tag:
    type: string
  attach-volume-to-server-req:
    type: object
    properties:
      volumeAttachment:
        type: object
        properties:
          volumeId:
            type: string
          device:
            type: string
  update-volume-attachment-delete-flag-req:
    type: object
    properties:
      volumeAttachment:
        type: object
        properties:
          volumeId:
            type: string
          delete_on_termination:
            type: boolean
  aggregate-post-req:
    type: object
    properties:
      aggregate:
        type: object
        properties:
          name:
            type: string
          availability_zone:
            type: string
  aggregate-update-post-req:
    type: object
    properties:
      aggregate:
        type: object
        properties:
          name:
            type: string
          availability_zone:
            type: string
  aggregate-add-host-post-req:
    type: object
    properties:
      add_host:
        type: object
        properties:
          host:
            type: string
  aggregate-images-post-req:
    type: object
    properties:
      cache:
        type: array
        items:
          $ref: '#/definitions/cach'
  cach:
    type: object
    properties:
      id:
        type: string
  event-create-req:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/event'
  event:
    type: object
    properties:
      name:
        type: string
      tag:
        type: string
      status:
        type: string
      server_uuid:
        type: string
  force_complete:
    type: object
    properties:
      force_complete:
        type: string
        default: 'null'
  quota-classes-update-post-req:
    type: object
    properties:
      quota_class_set:
        type: object
        properties:
          instances:
            type: integer
          cores:
            type: integer
          ram:
            type: integer
          metadata_items:
            type: integer
          injected_files:
            type: integer
          injected_file_content_bytes:
            type: integer
          injected_file_path_bytes:
            type: integer
          key_pairs:
            type: integer
          server_groups:
            type: integer
          server_group_members:
            type: integer
  network-create-req:
    type: object
    properties:
      network:
        type: object
        properties:
          label:
            type: string
          cidr:
            type: string
          mtu:
            type: integer
          dhcp_server:
            type: string
          enable_dhcp:
            type: boolean
          share_address:
            type: boolean
          allowed_start:
            type: string
          allowed_end:
            type: string
  network-add-req:
    type: object
    properties:
      id:
        type: string
  network-associate-host-req:
    type: object
    properties:
      associate_host:
        type: string
  snapshot-create-assisted-req:
    type: object
    properties:
      snapshot:
        type: object
        properties:
          volume_id:
            type: string
          create_info:
            type: object
            properties:
              snapshot_id:
                type: string
              type:
                type: string
              new_file:
                type: string
              id:
                type: string
